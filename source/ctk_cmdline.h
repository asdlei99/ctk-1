
/* Callback for passing to ctk_argv_parse(). */
typedef ctk_bool32 ctk_argv_parse_proc(const char* key, const char* value, void* pUserData);

/*
Converts a WinMain style command line to argv style.

Returns argc.

Use ctk_free_argv to free the allocated memory.
*/
int ctk_winmain_to_argv(const char* cmdlineWinMain, char*** argvOut);

/* Frees the argc/argv command line that was generated by ctk_winmain_to_argv(). */
void ctk_free_argv(char** argv);

/*
Parses a command line.

The string passed to the "value" parameter of the callback is always set to one of the items in the argv array
which means it can be used directly without the need to copy.
*/
void ctk_argv_parse(int argc, char** argv, ctk_argv_parse_proc callback, void* pUserData);

/* Determines whether of not the given key is present on the command line. */
ctk_bool32 ctk_argv_exists(int argc, char** argv, const char* key);

/* Retrieves the value of a key from an argc/argv style of command line. Do not free the returned value. */
const char* ctk_argv_get_value(int argc, char** argv, const char* key);
